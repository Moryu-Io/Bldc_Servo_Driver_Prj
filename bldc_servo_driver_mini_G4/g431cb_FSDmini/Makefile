##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.17.1] date: [Wed Jan 04 16:53:34 JST 2023] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = g431cb_FSDmini


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/gpio.c \
Core/Src/adc.c \
Core/Src/cordic.c \
Core/Src/dac.c \
Core/Src/dma.c \
Core/Src/fdcan.c \
Core/Src/spi.c \
Core/Src/tim.c \
Core/Src/usart.c \
Core/Src/stm32g4xx_it.c \
Core/Src/stm32g4xx_hal_msp.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_utils.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_exti.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_gpio.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_adc.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_dma.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc_ex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash_ex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_flash_ramfunc.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_gpio.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_exti.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_dma_ex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_pwr_ex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_cortex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_cordic.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_dac.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_fdcan.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_spi.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_tim_ex.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_tim.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_usart.c \
./../Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_ll_rcc.c \
Core/Src/system_stm32g4xx.c

CPP_SOURCES = \
./../User/wrapper_main.cpp \
./../User/debug_command.cpp \
flash_initial_params.cpp \
servo_driver_model_g431cb_fsdmini.cpp \
$(wildcard ./../User/MyDriver/*.cpp) \
$(wildcard ./../../common/ExtInterface/*.cpp) \
$(wildcard ./../../common/MotorDrive/*.cpp) \
$(wildcard ./../../common/Utility/*.cpp) 

VER_SOURCES = ./../User/version.cpp

# ASM sources
ASM_SOURCES =  \
startup_stm32g431xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
CXX = $(GCC_PATH)/$(PREFIX)g++
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
CXX = $(PREFIX)g++
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m4

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_FULL_LL_DRIVER \
-DUSE_HAL_DRIVER \
-DSTM32G431xx \
-DBUILDTIME="\"`date +'%Y-%m-%d %H:%M:%S'`\""

CPP_DEFS = $(C_DEFS)

# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-I./../Drivers/STM32G4xx_HAL_Driver/Inc \
-I./../Drivers/STM32G4xx_HAL_Driver/Inc/Legacy \
-I./../Drivers/CMSIS/Device/ST/STM32G4xx/Include \
-I./../Drivers/CMSIS/Include \
-I./../Middlewares/Third_Party/ARM_CMSIS/CMSIS/DSP/Include \
-I./../User \
-I./../User/MyDriver \
-I./../../common/ExtInterface \
-I./../../common/MotorDrive \
-I./../../common/Utility \
-IDrivers/STM32G4xx_HAL_Driver/Inc \
-IDrivers/STM32G4xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32G4xx/Include \
-IDrivers/CMSIS/Include

# C++ includes
CPP_INCLUDES = $(C_INCLUDES)

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CPPFLAGS = $(MCU) $(CPP_DEFS) $(CPP_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
CPPFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"
CPPFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32G431CBUx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys -lstdc++ -larm_cortexM4lf_math
LIBDIR = -L./../
LDFLAGS = $(MCU) -specs=nano.specs -specs=nosys.specs -u _printf_float -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of c++ objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(CPP_SOURCES:.cpp=.o)))
vpath %.cpp $(sort $(dir $(CPP_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS_V = $(OBJECTS) $(BUILD_DIR)/version.o	# version.oを含めたオブジェクト

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.cpp Makefile | $(BUILD_DIR)
	$(CXX) -c $(CPPFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

# version.oを作成する
$(BUILD_DIR)/version.o: $(VER_SOURCES) Makefile $(OBJECTS) | $(BUILD_DIR)
	$(CXX) -c $(CPPFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.cpp=.lst)) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS_V) Makefile
	$(CC) $(OBJECTS_V) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)/*
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***